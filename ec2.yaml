---
Parameters:
  MySqlRootPassword:
    NoEcho: true
    Description: Password for MySQL root user
    Type: String
  MySqlAppUser:
    Description: User name for MySQL demo database
    Type: String
  MySqlAppPassword:
    NoEcho: true
    Description: Password for MySQL demo database
    Type: String


Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      ImageId: ami-a4c7edb2
      InstanceType: t2.micro
      KeyName: MyEc2KeyPair
      Tags:
      - Key: Name
        Value: MySqlServer
      SecurityGroups:
        - !Ref ServerSecurityGroup
      UserData:
        Fn::Base64: !Sub |
           #!/bin/bash
           yum update -y &&\
           yum install -y mysql-server git mc &&\
           service mysqld start &&\
           chkconfig mysqld on &&\
           /usr/libexec/mysql55/mysqladmin -u root -h localhost password ${MySqlRootPassword} &&\
           git clone https://github.com/datacharmer/test_db.git &&\
           cd test_db &&\
           mysql -u root -h localhost --password=${MySqlRootPassword} -t < employees.sql &&\
           mysql -u root -h localhost --password=${MySqlRootPassword} -e "grant all on employees.* to '"${MySqlAppUser}"'@localhost identified by '"${MySqlAppPassword}"'" &&\
           mysql -u root -h localhost --password=${MySqlRootPassword} -e "grant all on employees.* to '"${MySqlAppUser}"'@'%' identified by '"${MySqlAppPassword}"'" &&\
           time mysql -u root -h localhost --password=${MySqlRootPassword}  -t < test_employees_md5.sql &&\
           mkdir /opt/mysql_backup &&\
           echo "*/10 * * * * root mysqldump --verbose=false --user=demo --password=1234Alex1234 employees > /opt/mysql_backup/employees-\`date '+\%Y-\%m-\%d_\%H:\%M:\%S'\`.sql" >> /etc/crontab &&\
           echo "0 * * * * root find /opt/mysql_backup/ -mmin +60 -type f -exec rm -fv {} \;" >> /etc/crontab
           service crond restart


  # an elastic IP for our instance
  MyEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref MyInstance

  # our EC2 security group
  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: allow connections from specified CIDR ranges
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 195.234.75.251/32

